// <auto-generated />
using System;
using FPTAlumniConnect.DataTier.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FPTAlumniConnect.DataTier.Migrations
{
    [DbContext(typeof(AlumniConnectContext))]
    [Migration("20250103082631_AddTimeLine")]
    partial class AddTimeLine
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CommentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("AuthorID");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ParentCommentId")
                        .HasColumnType("int");

                    b.Property<int?>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("PostID");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CommentId")
                        .HasName("PK__Comments__C3B4DFAA19A3DE73");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.Cv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("Birthday")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("EndAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsDeal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isDeal")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("JobLevel")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LanguageLevel")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("MaxSalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("MinSalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PrimaryDuties")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("StartAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id")
                        .HasName("PK__CV__3214EC07F4EB68AB");

                    b.HasIndex("UserId");

                    b.ToTable("CV", (string)null);
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Achievements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Major")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolWebsite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.EducationHistory", b =>
                {
                    b.Property<int>("EduHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EduHistoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EduHistoryId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Iduser")
                        .HasColumnType("int")
                        .HasColumnName("IDUser");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ReceivedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("EduHistoryId")
                        .HasName("PK__Educatio__63181BC1D2CF6A79");

                    b.HasIndex("Iduser");

                    b.ToTable("EducationHistory", (string)null);
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EventID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrganizerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("EventId")
                        .HasName("PK__Events__7944C870B1F118B4");

                    b.HasIndex("OrganizerId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.EventTimeLine", b =>
                {
                    b.Property<int>("EventTimeLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventTimeLineId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventTimeLineId");

                    b.HasIndex("EventId");

                    b.ToTable("EventTimeLines");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.GroupChat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__GroupCha__3214EC071C62797A");

                    b.HasIndex("CreatedBy");

                    b.ToTable("GroupChat", (string)null);
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.GroupChatMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("GroupChatId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsOwner")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__GroupCha__3214EC2776D442E0");

                    b.HasIndex("GroupChatId");

                    b.HasIndex("UserId");

                    b.ToTable("GroupChatMembers");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.JobApplication", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ApplicationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Cvid")
                        .HasColumnType("int")
                        .HasColumnName("CVID");

                    b.Property<int?>("JobPostId")
                        .HasColumnType("int")
                        .HasColumnName("JobPostID");

                    b.Property<string>("LetterCover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ApplicationId")
                        .HasName("PK__JobAppli__C93A4F795EC7C027");

                    b.HasIndex("Cvid");

                    b.HasIndex("JobPostId");

                    b.ToTable("JobApplications");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.JobPost", b =>
                {
                    b.Property<int>("JobPostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("JobPostID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobPostId"));

                    b.Property<string>("Benefits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeal")
                        .HasColumnType("bit");

                    b.Property<string>("JobDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("MajorId")
                        .HasColumnType("int")
                        .HasColumnName("MajorID");

                    b.Property<int?>("MaxSalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("MinSalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Requirements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("False");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("JobPostId")
                        .HasName("PK__JobPost__57689C5A3E8D6828");

                    b.HasIndex("MajorId");

                    b.HasIndex("UserId");

                    b.ToTable("JobPost", (string)null);
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.MajorCode", b =>
                {
                    b.Property<int>("MajorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MajorId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MajorName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("MajorId")
                        .HasName("PK__MajorCod__D5B8BF91CFCD90DF");

                    b.ToTable("MajorCode", (string)null);
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.Mentorship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AumniId")
                        .HasColumnType("int")
                        .HasColumnName("AumniID");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RequestMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Mentorsh__3214EC276D8E333E");

                    b.HasIndex("AumniId");

                    b.ToTable("Mentorship", (string)null);
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.MessageGroupChat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__MessageG__3214EC278ACF2846");

                    b.HasIndex("MemberId");

                    b.ToTable("MessageGroupChat", (string)null);
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.NotificationSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("JobNotifications")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("MessageNotifications")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("ReceiveEmailNotifications")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("ReceiveInAppNotifications")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Notifica__3213E83F452FF6A1");

                    b.HasIndex("UserId");

                    b.ToTable("NotificationSettings");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PostID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"));

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("AuthorID");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsPrivate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("MajorId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Views")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("PostId")
                        .HasName("PK__Posts__AA1260383844026D");

                    b.HasIndex("AuthorId");

                    b.HasIndex("MajorId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.PostReport", b =>
                {
                    b.Property<int>("RpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RpID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RpId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("PostID");

                    b.Property<string>("TypeOfReport")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("RpId")
                        .HasName("PK__PostRepo__DBD62899743C565C");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("PostReports");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.PrivacySetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<bool?>("VisibleToAlumni")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("VisibleToEducationHistory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("VisibleToEmail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("VisibleToMajor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id")
                        .HasName("PK__PrivacyS__3213E83F8BE3191C");

                    b.HasIndex("UserId");

                    b.ToTable("PrivacySetting", (string)null);
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("RoleId")
                        .HasName("PK__Role__8AFACE3A0E2F5438");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ScheduleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("MentorId")
                        .HasColumnType("int")
                        .HasColumnName("MentorID");

                    b.Property<int?>("MentorShipId")
                        .HasColumnType("int")
                        .HasColumnName("MentorShipID");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ScheduleId")
                        .HasName("PK__Schedule__9C8A5B69F957490C");

                    b.HasIndex("MentorId");

                    b.HasIndex("MentorShipId");

                    b.ToTable("Schedule", (string)null);
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.SkillJob", b =>
                {
                    b.Property<int>("SkillJobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SkillJobId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("CvID")
                        .HasColumnType("int");

                    b.Property<string>("Skill")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("SkillJobId");

                    b.HasIndex("CvID");

                    b.ToTable("SkillJob", (string)null);
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.SoicalLink", b =>
                {
                    b.Property<int>("Slid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SLID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Slid"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Slid")
                        .HasName("PK__SoicalLi__A43D35CFADE62797");

                    b.HasIndex("UserId");

                    b.ToTable("SoicalLink", (string)null);
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.SpMajorCode", b =>
                {
                    b.Property<int>("SpMajorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpMajorId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("MajorId")
                        .HasColumnType("int");

                    b.Property<string>("MajorName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("SpMajorId")
                        .HasName("PK__SpMajorC__181F8B5D69DA480D");

                    b.HasIndex("MajorId");

                    b.ToTable("SpMajorCode", (string)null);
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.TagJob", b =>
                {
                    b.Property<int>("TagJobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagJobId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("CvID")
                        .HasColumnType("int");

                    b.Property<string>("Tag")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("TagJobId");

                    b.HasIndex("CvID");

                    b.ToTable("TagJob", (string)null);
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("EmailVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("GoogleId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GoogleID");

                    b.Property<bool?>("IsMentor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isMentor")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("MajorId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCAC5DE5B589");

                    b.HasIndex("MajorId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.UserJoinEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("EventID");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id")
                        .HasName("PK__UserJoin__3214EC2704503508");

                    b.HasIndex("EventId");

                    b.HasIndex("UserId");

                    b.ToTable("UserJoinEvent", (string)null);
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.WorkExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyWebsite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("WorkExperiences");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.Comment", b =>
                {
                    b.HasOne("FPTAlumniConnect.DataTier.Models.User", "Author")
                        .WithMany("Comments")
                        .HasForeignKey("AuthorId")
                        .HasConstraintName("FK__Comments__Author__208CD6FA");

                    b.HasOne("FPTAlumniConnect.DataTier.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .HasConstraintName("FK__Comments__PostID__1F98B2C1");

                    b.Navigation("Author");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.Cv", b =>
                {
                    b.HasOne("FPTAlumniConnect.DataTier.Models.User", "User")
                        .WithMany("Cvs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__CV__UserID__3D2915A8");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.Education", b =>
                {
                    b.HasOne("FPTAlumniConnect.DataTier.Models.User", "User")
                        .WithMany("EducationRecords")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.EducationHistory", b =>
                {
                    b.HasOne("FPTAlumniConnect.DataTier.Models.User", "IduserNavigation")
                        .WithMany("EducationHistories")
                        .HasForeignKey("Iduser")
                        .HasConstraintName("FK__Education__IDUse__4C6B5938");

                    b.Navigation("IduserNavigation");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.Event", b =>
                {
                    b.HasOne("FPTAlumniConnect.DataTier.Models.User", "Organizer")
                        .WithMany("Events")
                        .HasForeignKey("OrganizerId")
                        .HasConstraintName("FK__Events__Organize__02084FDA");

                    b.Navigation("Organizer");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.EventTimeLine", b =>
                {
                    b.HasOne("FPTAlumniConnect.DataTier.Models.Event", "Event")
                        .WithMany("EventTimeLines")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.GroupChat", b =>
                {
                    b.HasOne("FPTAlumniConnect.DataTier.Models.User", "CreatedByNavigation")
                        .WithMany("GroupChats")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK__GroupChat__Creat__6C190EBB");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.GroupChatMember", b =>
                {
                    b.HasOne("FPTAlumniConnect.DataTier.Models.GroupChat", "GroupChat")
                        .WithMany("GroupChatMembers")
                        .HasForeignKey("GroupChatId")
                        .HasConstraintName("FK__GroupChat__Group__71D1E811");

                    b.HasOne("FPTAlumniConnect.DataTier.Models.User", "User")
                        .WithMany("GroupChatMembers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__GroupChat__UserI__72C60C4A");

                    b.Navigation("GroupChat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.JobApplication", b =>
                {
                    b.HasOne("FPTAlumniConnect.DataTier.Models.Cv", "Cv")
                        .WithMany("JobApplications")
                        .HasForeignKey("Cvid")
                        .HasConstraintName("FK__JobApplica__CVID__47A6A41B");

                    b.HasOne("FPTAlumniConnect.DataTier.Models.JobPost", "JobPost")
                        .WithMany("JobApplications")
                        .HasForeignKey("JobPostId")
                        .HasConstraintName("FK__JobApplic__JobPo__46B27FE2");

                    b.Navigation("Cv");

                    b.Navigation("JobPost");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.JobPost", b =>
                {
                    b.HasOne("FPTAlumniConnect.DataTier.Models.MajorCode", "Major")
                        .WithMany("JobPosts")
                        .HasForeignKey("MajorId")
                        .HasConstraintName("FK__JobPost__MajorID__31B762FC");

                    b.HasOne("FPTAlumniConnect.DataTier.Models.User", "User")
                        .WithMany("JobPosts")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__JobPost__UserID__30C33EC3");

                    b.Navigation("Major");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.Mentorship", b =>
                {
                    b.HasOne("FPTAlumniConnect.DataTier.Models.User", "Aumni")
                        .WithMany("Mentorships")
                        .HasForeignKey("AumniId")
                        .HasConstraintName("FK__Mentorshi__Aumni__60A75C0F");

                    b.Navigation("Aumni");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.MessageGroupChat", b =>
                {
                    b.HasOne("FPTAlumniConnect.DataTier.Models.GroupChatMember", "Member")
                        .WithMany("MessageGroupChats")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK__MessageGr__Membe__778AC167");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.Notification", b =>
                {
                    b.HasOne("FPTAlumniConnect.DataTier.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.NotificationSetting", b =>
                {
                    b.HasOne("FPTAlumniConnect.DataTier.Models.User", "User")
                        .WithMany("NotificationSettings")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Notificat__UserI__59C55456");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.Post", b =>
                {
                    b.HasOne("FPTAlumniConnect.DataTier.Models.User", "Author")
                        .WithMany("Posts")
                        .HasForeignKey("AuthorId")
                        .HasConstraintName("FK__Posts__AuthorID__18EBB532");

                    b.HasOne("FPTAlumniConnect.DataTier.Models.MajorCode", "Major")
                        .WithMany("Posts")
                        .HasForeignKey("MajorId")
                        .HasConstraintName("FK__Posts__MajorId__19DFD96B");

                    b.Navigation("Author");

                    b.Navigation("Major");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.PostReport", b =>
                {
                    b.HasOne("FPTAlumniConnect.DataTier.Models.Post", "Post")
                        .WithMany("PostReports")
                        .HasForeignKey("PostId")
                        .HasConstraintName("FK__PostRepor__PostI__25518C17");

                    b.HasOne("FPTAlumniConnect.DataTier.Models.User", "User")
                        .WithMany("PostReports")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__PostRepor__UserI__2645B050");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.PrivacySetting", b =>
                {
                    b.HasOne("FPTAlumniConnect.DataTier.Models.User", "User")
                        .WithMany("PrivacySettings")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__PrivacySe__UserI__625A9A57");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.Schedule", b =>
                {
                    b.HasOne("FPTAlumniConnect.DataTier.Models.User", "Mentor")
                        .WithMany("Schedules")
                        .HasForeignKey("MentorId")
                        .HasConstraintName("FK__Schedule__Mentor__6754599E");

                    b.HasOne("FPTAlumniConnect.DataTier.Models.Mentorship", "MentorShip")
                        .WithMany("Schedules")
                        .HasForeignKey("MentorShipId")
                        .HasConstraintName("FK__Schedule__Mentor__66603565");

                    b.Navigation("Mentor");

                    b.Navigation("MentorShip");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.SkillJob", b =>
                {
                    b.HasOne("FPTAlumniConnect.DataTier.Models.Cv", "Cv")
                        .WithMany("SkillJobs")
                        .HasForeignKey("CvID");

                    b.Navigation("Cv");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.SoicalLink", b =>
                {
                    b.HasOne("FPTAlumniConnect.DataTier.Models.User", "User")
                        .WithMany("SoicalLinks")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__SoicalLin__UserI__51300E55");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.SpMajorCode", b =>
                {
                    b.HasOne("FPTAlumniConnect.DataTier.Models.MajorCode", "Major")
                        .WithMany("SpMajorCodes")
                        .HasForeignKey("MajorId")
                        .HasConstraintName("FK__SpMajorCo__Major__2B0A656D");

                    b.Navigation("Major");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.TagJob", b =>
                {
                    b.HasOne("FPTAlumniConnect.DataTier.Models.Cv", "Cv")
                        .WithMany("TagJobs")
                        .HasForeignKey("CvID");

                    b.Navigation("Cv");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.User", b =>
                {
                    b.HasOne("FPTAlumniConnect.DataTier.Models.MajorCode", "Major")
                        .WithMany("Users")
                        .HasForeignKey("MajorId")
                        .HasConstraintName("FK__Users__MajorId__5CD6CB2B");

                    b.HasOne("FPTAlumniConnect.DataTier.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Users__RoleID__5BE2A6F2");

                    b.Navigation("Major");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.UserJoinEvent", b =>
                {
                    b.HasOne("FPTAlumniConnect.DataTier.Models.Event", "Event")
                        .WithMany("UserJoinEvents")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__UserJoinE__Event__0C85DE4D");

                    b.HasOne("FPTAlumniConnect.DataTier.Models.User", "User")
                        .WithMany("UserJoinEvents")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserJoinE__UserI__0B91BA14");

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.WorkExperience", b =>
                {
                    b.HasOne("FPTAlumniConnect.DataTier.Models.User", "User")
                        .WithMany("WorkExperiences")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.Cv", b =>
                {
                    b.Navigation("JobApplications");

                    b.Navigation("SkillJobs");

                    b.Navigation("TagJobs");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.Event", b =>
                {
                    b.Navigation("EventTimeLines");

                    b.Navigation("UserJoinEvents");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.GroupChat", b =>
                {
                    b.Navigation("GroupChatMembers");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.GroupChatMember", b =>
                {
                    b.Navigation("MessageGroupChats");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.JobPost", b =>
                {
                    b.Navigation("JobApplications");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.MajorCode", b =>
                {
                    b.Navigation("JobPosts");

                    b.Navigation("Posts");

                    b.Navigation("SpMajorCodes");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.Mentorship", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("PostReports");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("FPTAlumniConnect.DataTier.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Cvs");

                    b.Navigation("EducationHistories");

                    b.Navigation("EducationRecords");

                    b.Navigation("Events");

                    b.Navigation("GroupChatMembers");

                    b.Navigation("GroupChats");

                    b.Navigation("JobPosts");

                    b.Navigation("Mentorships");

                    b.Navigation("NotificationSettings");

                    b.Navigation("PostReports");

                    b.Navigation("Posts");

                    b.Navigation("PrivacySettings");

                    b.Navigation("Schedules");

                    b.Navigation("SoicalLinks");

                    b.Navigation("UserJoinEvents");

                    b.Navigation("WorkExperiences");
                });
#pragma warning restore 612, 618
        }
    }
}
